{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","username","setUsername","password","setPassword","user","setUser","useEffect","loggedInUser","localStorage","getItem","foundUser","JSON","parse","stringify","handleSubmit","e","a","preventDefault","axios","post","response","data","setItem","console","log","name","onClick","clear","onSubmit","htmlFor","type","value","placeholder","onChange","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAyEeA,EAtEH,WACV,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAwBJ,qBAAxB,mBAAOK,EAAP,KAAaC,EAAb,KAEAC,qBAAU,WACR,IAAMC,EAAeC,aAAaC,QAAQ,QAC1C,GAAIF,EAAc,CAChB,IAAMG,EAAYC,KAAKC,MAAMD,KAAKE,UAAUN,IAC5CF,EAAQK,MAET,IAGH,IAOMI,EAAY,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,6DACnBD,EAAEE,iBACIb,EAAO,CAAEJ,WAAUE,YAFN,SAIIgB,IAAMC,KAC3B,iDACAf,GANiB,OAIbgB,EAJa,OASnBf,EAAQe,EAASC,MAEjBb,aAAac,QAAQ,OAAQF,EAASC,MACtCE,QAAQC,IAAIJ,EAASC,MAZF,2CAAH,sDAiBlB,OAAIjB,EACK,gCAAMA,EAAKqB,KAAX,aACP,wBAAQC,QA1BW,WACnBrB,EAAQ,IACRJ,EAAY,IACZE,EAAY,IACZK,aAAamB,SAsBb,uBAMA,uBAAMC,SAAUd,EAAhB,UACE,uBAAOe,QAAQ,WAAf,wBACA,uBACEC,KAAK,OACLC,MAAO/B,EACPgC,YAAY,mBACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBjC,EAAYiC,EAAOH,UAE/C,gCACE,uBAAOF,QAAQ,WAAf,wBACA,uBACEC,KAAK,WACLC,MAAO7B,EACP8B,YAAY,mBACZC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB/B,EAAY+B,EAAOH,aAGjD,wBAAQD,KAAK,SAAb,uBCtDSK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e56df049.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst App = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState()\n// already logged in\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem(\"user\");\n    if (loggedInUser) {\n      const foundUser = JSON.parse(JSON.stringify(loggedInUser));\n      setUser(foundUser);\n    }\n  }, []);\n\n  // logout the user\n  const handleLogout = () => {\n    setUser({});\n    setUsername(\"\");\n    setPassword(\"\");\n    localStorage.clear();\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const user = { username, password };\n    // send user input to the server\n    const response = await axios.post(\n      \"http://api.getcountapp.com/api/v1/authenticate\",\n      user\n    );\n    // set the user state \n    setUser(response.data)\n    // store in localStorage\n    localStorage.setItem('user', response.data)\n    console.log(response.data)\n    \n  };\n\n// logged in page\n  if (user) {\n    return <div>{user.name} Logged in\n    <button onClick={handleLogout}>Logout</button>\n    </div>;\n  }\n\n  //  show the login form for non user\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"username\">Username: </label>\n      <input\n        type=\"text\"\n        value={username}\n        placeholder=\"enter a username\"\n        onChange={({ target }) => setUsername(target.value)}\n      />\n      <div>\n        <label htmlFor=\"password\">Password: </label>\n        <input\n          type=\"password\"\n          value={password}\n          placeholder=\"enter a password\"\n          onChange={({ target }) => setPassword(target.value)}\n        />\n      </div>\n      <button type=\"submit\">Login</button>\n    </form>\n\n  );\n};\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}